{"version":3,"sources":["webpack:///./node_modules/@theia/json/src/browser/json-client-contribution.ts","webpack:///./node_modules/@theia/json/src/browser/json-frontend-module.ts","webpack:///./node_modules/@theia/json/src/browser/json-preferences.ts","webpack:///./node_modules/@theia/json/src/common/index.ts","webpack:///./node_modules/@theia/languages/src/browser/index.ts"],"names":[],"mappings":"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","file":"64.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport {\n    BaseLanguageClientContribution,\n    Workspace,\n    Languages,\n    LanguageClientFactory,\n    ILanguageClient,\n    DocumentSelector\n} from '@theia/languages/lib/browser';\nimport { JSON_LANGUAGE_ID, JSON_LANGUAGE_NAME, JSONC_LANGUAGE_ID } from '../common';\nimport { ResourceProvider, DisposableCollection } from '@theia/core';\nimport URI from '@theia/core/lib/common/uri';\nimport { JsonPreferences } from './json-preferences';\nimport { JsonSchemaStore } from '@theia/core/lib/browser/json-schema-store';\nimport { Endpoint } from '@theia/core/lib/browser';\n\n@injectable()\nexport class JsonClientContribution extends BaseLanguageClientContribution {\n\n    readonly id = JSON_LANGUAGE_ID;\n    readonly name = JSON_LANGUAGE_NAME;\n\n    constructor(\n        @inject(Workspace) protected readonly workspace: Workspace,\n        @inject(ResourceProvider) protected readonly resourceProvider: ResourceProvider,\n        @inject(Languages) protected readonly languages: Languages,\n        @inject(LanguageClientFactory) protected readonly languageClientFactory: LanguageClientFactory,\n        @inject(JsonPreferences) protected readonly preferences: JsonPreferences,\n        @inject(JsonSchemaStore) protected readonly jsonSchemaStore: JsonSchemaStore\n    ) {\n        super(workspace, languages, languageClientFactory);\n        this.initializeJsonSchemaAssociations();\n    }\n\n    protected updateSchemas(client: ILanguageClient): void {\n        const allConfigs = [...this.jsonSchemaStore.getJsonSchemaConfigurations()];\n        const config = this.preferences['json.schemas'];\n        if (config instanceof Array) {\n            allConfigs.push(...config);\n        }\n        const registry: { [pattern: string]: string[] } = {};\n        for (const s of allConfigs) {\n            if (s.fileMatch) {\n                for (let fileMatch of s.fileMatch) {\n                    if (fileMatch.charAt(0) !== '/' && !fileMatch.match(/\\w+:/)) {\n                        fileMatch = '/' + fileMatch;\n                    }\n                    registry[fileMatch] = [s.url];\n                }\n            }\n        }\n        client.sendNotification('json/schemaAssociations', registry);\n    }\n\n    protected get globPatterns(): string[] {\n        return [\n            '**/*.json',\n            '**/*.jsonc',\n        ];\n    }\n\n    protected get documentSelector(): DocumentSelector | undefined {\n        return [this.id, JSONC_LANGUAGE_ID];\n    }\n\n    protected get configurationSection(): string[] {\n        return [this.id];\n    }\n\n    protected get initializationOptions(): {} {\n        return {};\n    }\n\n    protected onReady(languageClient: ILanguageClient, toStop: DisposableCollection): void {\n        super.onReady(languageClient, toStop);\n        // handle content request\n        languageClient.onRequest('vscode/content', async (uriPath: string) => {\n            const uri = new URI(uriPath);\n            const resource = await this.resourceProvider(uri);\n            const text = await resource.readContents();\n            return text;\n        });\n        toStop.push(this.preferences.onPreferenceChanged(e => {\n            if (e.preferenceName === 'json.schemas') {\n                this.updateSchemas(languageClient);\n            }\n        }));\n        toStop.push(this.jsonSchemaStore.onSchemasChanged(() => this.updateSchemas(languageClient)));\n        this.updateSchemas(languageClient);\n    }\n\n    protected async initializeJsonSchemaAssociations(): Promise<void> {\n        const url = `${new Endpoint().httpScheme}//schemastore.azurewebsites.net/api/json/catalog.json`;\n        const response = await fetch(url);\n        const schemas: SchemaData[] = (await response.json()).schemas!;\n        for (const s of schemas) {\n            if (s.fileMatch) {\n                this.jsonSchemaStore.registerSchema({\n                    fileMatch: s.fileMatch,\n                    url: s.url\n                });\n            }\n        }\n    }\n\n}\n\ninterface SchemaData {\n    name: string;\n    description: string;\n    fileMatch?: string[];\n    url: string;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    schema: any;\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from 'inversify';\nimport { LanguageClientContribution } from '@theia/languages/lib/browser';\nimport { JsonClientContribution } from './json-client-contribution';\nimport { bindJsonPreferences } from './json-preferences';\n\nexport default new ContainerModule(bind => {\n    bindJsonPreferences(bind);\n\n    bind(LanguageClientContribution).to(JsonClientContribution).inSingletonScope();\n});\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { interfaces } from 'inversify';\nimport {\n    createPreferenceProxy,\n    PreferenceProxy,\n    PreferenceService,\n    PreferenceContribution,\n    PreferenceSchema,\n    PreferenceChangeEvent\n} from '@theia/core/lib/browser/preferences';\nimport { JsonSchemaConfiguration } from '@theia/core/lib/browser/json-schema-store';\n\nexport const jsonPreferenceSchema: PreferenceSchema = {\n    'type': 'object',\n    'properties': {\n        'json.schemas': {\n            'type': 'array',\n            'description': 'Associate schemas to JSON files in the current project',\n            'items': {\n                'type': 'object',\n                'default': {\n                    'fileMatch': [\n                        '/myfile'\n                    ],\n                    'url': 'schemaURL'\n                },\n                'properties': {\n                    'url': {\n                        'type': 'string',\n                        'default': '/user.schema.json',\n                        'description': 'A URL to a schema or a relative path to a schema in the current directory'\n                    },\n                    'fileMatch': {\n                        'type': 'array',\n                        'items': {\n                            'type': 'string',\n                            'default': 'MyFile.json',\n                            'description': 'A file pattern that can contain \\'*\\' to match against when resolving JSON files to schemas.'\n                        },\n                        'minItems': 1,\n                        'description': 'An array of file patterns to match against when resolving JSON files to schemas.'\n                    }\n                }\n            }\n        },\n        'json.format.enable': {\n            'type': 'boolean',\n            'default': true,\n            'description': 'Enable/disable default JSON formatter'\n        },\n    }\n};\n\nexport interface JsonConfiguration {\n    'json.schemas': JsonSchemaConfiguration[]\n    'json.format.enable': boolean\n}\nexport type JsonPreferenceChange = PreferenceChangeEvent<JsonConfiguration>;\n\nexport const JsonPreferences = Symbol('JsonPreferences');\nexport type JsonPreferences = PreferenceProxy<JsonConfiguration>;\n\nexport function createJsonPreferences(preferences: PreferenceService): JsonPreferences {\n    return createPreferenceProxy(preferences, jsonPreferenceSchema);\n}\n\nexport function bindJsonPreferences(bind: interfaces.Bind): void {\n    bind(JsonPreferences).toDynamicValue(ctx => {\n        const preferences = ctx.container.get<PreferenceService>(PreferenceService);\n        return createJsonPreferences(preferences);\n    }).inSingletonScope();\n\n    bind(PreferenceContribution).toConstantValue({ schema: jsonPreferenceSchema });\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport const JSON_LANGUAGE_ID = 'json';\nexport const JSON_LANGUAGE_NAME = 'JSON';\n\nexport const JSONC_LANGUAGE_ID = 'jsonc';\nexport const JSONC_LANGUAGE_NAME = 'JSONC';\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './language-client-services';\nexport * from './language-client-factory';\nexport * from './language-client-contribution';\nexport * from './languages-frontend-contribution';\nexport * from './languages-frontend-module';\n"],"sourceRoot":""}