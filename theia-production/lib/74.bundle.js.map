{"version":3,"sources":["webpack:///./node_modules/@theia/output/src/browser/output-frontend-module.ts","webpack:///./node_modules/@theia/output/src/browser/output-toolbar-contribution.tsx"],"names":[],"mappings":"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","file":"74.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from 'inversify';\nimport { OutputWidget, OUTPUT_WIDGET_KIND } from './output-widget';\nimport { WidgetFactory, bindViewContribution, KeybindingContext } from '@theia/core/lib/browser';\nimport { OutputContribution, OutputWidgetIsActiveContext } from './output-contribution';\nimport { OutputToolbarContribution } from './output-toolbar-contribution';\nimport { OutputChannelManager } from '../common/output-channel';\nimport { bindOutputPreferences } from '../common/output-preferences';\nimport { TabBarToolbarContribution } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\n\nexport default new ContainerModule((bind, unbind, isBound, rebind) => {\n    bindOutputPreferences(bind);\n    bind(OutputWidget).toSelf();\n    bind(OutputChannelManager).toSelf().inSingletonScope();\n\n    bind(WidgetFactory).toDynamicValue(context => ({\n        id: OUTPUT_WIDGET_KIND,\n        createWidget: () => context.container.get<OutputWidget>(OutputWidget)\n    }));\n\n    bindViewContribution(bind, OutputContribution);\n    bind(OutputWidgetIsActiveContext).toSelf().inSingletonScope();\n    bind(KeybindingContext).toService(OutputWidgetIsActiveContext);\n    bind(OutputToolbarContribution).toSelf().inSingletonScope();\n    bind(TabBarToolbarContribution).toService(OutputToolbarContribution);\n});\n","/********************************************************************************\n * Copyright (C) 2019 Arm and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from 'inversify';\nimport { OutputWidget } from './output-widget';\nimport { OutputChannelManager } from '../common/output-channel';\nimport { TabBarToolbarContribution, TabBarToolbarRegistry } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { OutputCommands } from './output-contribution';\nimport * as React from 'react';\n\n@injectable()\nexport class OutputToolbarContribution implements TabBarToolbarContribution {\n\n    @inject(OutputChannelManager)\n    protected readonly outputChannelManager: OutputChannelManager;\n\n    async registerToolbarItems(toolbarRegistry: TabBarToolbarRegistry): Promise<void> {\n        toolbarRegistry.registerItem({\n            id: 'channels',\n            render: () => this.renderChannelSelector(),\n            isVisible: widget => (widget instanceof OutputWidget),\n            onDidChange: this.outputChannelManager.onListOrSelectionChange\n        });\n\n        toolbarRegistry.registerItem({\n            id: OutputCommands.CLEAR_OUTPUT_TOOLBAR.id,\n            command: OutputCommands.CLEAR_OUTPUT_TOOLBAR.id,\n            tooltip: 'Clear Output',\n            priority: 1,\n        });\n    }\n\n    protected readonly NONE = '<no channels>';\n\n    protected renderChannelSelector(): React.ReactNode {\n        const channelOptionElements: React.ReactNode[] = [];\n        this.outputChannelManager.getVisibleChannels().forEach(channel => {\n            channelOptionElements.push(<option value={channel.name} key={channel.name}>{channel.name}</option>);\n        });\n        if (channelOptionElements.length === 0) {\n            channelOptionElements.push(<option key={this.NONE} value={this.NONE}>{this.NONE}</option>);\n        }\n        return <select\n            className='theia-select'\n            id={OutputWidget.IDs.CHANNEL_LIST}\n            key={OutputWidget.IDs.CHANNEL_LIST}\n            value={this.outputChannelManager.selectedChannel ? this.outputChannelManager.selectedChannel.name : this.NONE}\n            onChange={this.changeChannel}\n        >\n            {channelOptionElements}\n        </select>;\n    }\n\n    protected changeChannel = (event: React.ChangeEvent<HTMLSelectElement>) => {\n        const channelName = event.target.value;\n        if (channelName !== this.NONE) {\n            this.outputChannelManager.selectedChannel = this.outputChannelManager.getChannel(channelName);\n        }\n    };\n}\n"],"sourceRoot":""}